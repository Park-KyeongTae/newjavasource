package polymorphism;

/* 다형성 polymorphism
 * 여러가지 형태를 가질 수 있는 능력
 * 상속일때만 가능
 * '하나의 참조 변수'로 "여러 타입의 객체"를 참조할 수 있는 것
 * '조상 타입의 참조 변수'로 "자손 타입의 객체"를 다룰 수 있는 것
 * 
 *  장점
 *   1) 여러 자식 클래스 객체를 하나의 배열로 다룰 수 있음
 *   2) 메소드 매개변수를 부모 타입으로 받아 여러 클래스에 공통 사용 가능
 */

/* 다형성에 의해서 생성된 객체를 활용해 강제 형변환이 가능하다
자손 왼쪽 부모 오른쪽은 캐스팅 해도 런타임 에러. 그냥 무조건 안됨
클래스 끼리는 형제 관계 없음, 같은 클래스를 상속해도 서로는 무관한 클래스다
*/

/* 부모타입 객체명 = new 자손타입(); : 부모 클래스 멤버, 메소드까지만 접근 가능하다
 * 자손타입 객체명 = new 자손타입(); : 자손 클래스 멤버, 메소드에도 접근 가능하다
 */


public class A_Note {

}
